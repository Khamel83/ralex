
id: B06
name: Absorb External Best Practices
description: A step-by-step plan to research and distill actionable insights from external engineering blogs and documentation into the `.agent-os/standards/` directory.
status: defined
priority: low
steps:
  - name: "Step 1: Fetch and Analyze Anthropic's Best Practices"
    description: "Download and process the content from Anthropic's engineering blog on Claude Code best practices."
    sub_steps:
      - "Use the `web_fetch` tool with the prompt: 'Summarize the key best practices for creating coding agents from https://www.anthropic.com/engineering/claude-code-best-practices'."
      - "Save the summary to a new file: `.agent-os/standards/anthropic-claude-practices.md`."

  - name: "Step 2: Fetch and Analyze Real-time Application Architectures"
    description: "Download and process content from modern state synchronization platforms to understand their architectural patterns."
    sub_steps:
      - "Use the `web_fetch` tool with the prompt: 'For each of the following URLs, provide a 3-sentence summary of its core architectural concept: https://livestore.dev/, https://zero.rocicorp.dev/, https://github.com/get-convex/convex-backend'."
      - "Save the summaries to a new file: `.agent-os/standards/real-time-architectures.md`."

  - name: "Step 3: Synthesize and Link Findings"
    description: "Create a master document that synthesizes the findings and links them to our existing and future tasks."
    sub_steps:
      - "Create a new file: `.agent-os/standards/external-insights-summary.md`."
      - "In this file, write a summary that connects the dots between the Anthropic practices and the real-time architectures."
      - "For at least two key insights, add a note explaining how it could influence a specific task (e.g., 'The real-time sync patterns from Convex could inform the architecture for Task B4 - Atlas Prototyping')."

  - name: "Step 4: Update Task B06 in .ralex_tasks.json"
    description: "Mark the research task as 'completed'."
    tool_call: "default_api.replace(file_path='.ralex_tasks.json', old_string='"status": "pending"...', new_string='"status": "completed"...')"
